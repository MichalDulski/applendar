// <auto-generated />
using System;
using Applander.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Applander.Infrastructure.Migrations
{
    [DbContext(typeof(ApplendarDbContext))]
    partial class ApplanderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Applander.Domain.Entities.ApplendarUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ArchivedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ApplendarUsers");
                });

            modelBuilder.Entity("Applander.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ArchivedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob");

                    b.Property<bool>("IsCompanionAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPetAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MaximumNumberOfParticipants")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Applander.Domain.Entities.EventInvitation", b =>
                {
                    b.Property<Guid>("ApplendarUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ArchivedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ApplendarUserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("EventInvitations");
                });

            modelBuilder.Entity("Applander.Domain.Entities.ApplendarUser", b =>
                {
                    b.OwnsOne("Applander.Domain.Entities.Preferences", "Preferences", b1 =>
                        {
                            b1.Property<Guid>("ApplendarUserId")
                                .HasColumnType("char(36)");

                            b1.Property<bool>("NotifyAboutEventsWithCompanions")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("NotifyAboutEventsWithPets")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("NotifyAboutOfflineEvents")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("NotifyAboutOnlineEvents")
                                .HasColumnType("tinyint(1)");

                            b1.HasKey("ApplendarUserId");

                            b1.ToTable("ApplendarUsers");

                            b1.WithOwner()
                                .HasForeignKey("ApplendarUserId");
                        });

                    b.Navigation("Preferences")
                        .IsRequired();
                });

            modelBuilder.Entity("Applander.Domain.Entities.Event", b =>
                {
                    b.HasOne("Applander.Domain.Entities.ApplendarUser", "Organizer")
                        .WithMany("OrganizedEvents")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Applander.Domain.Entities.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("EventId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Address")
                                .HasColumnType("longtext");

                            b1.Property<string>("City")
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .HasColumnType("longtext");

                            b1.Property<bool>("IsOnline")
                                .HasColumnType("tinyint(1)");

                            b1.Property<string>("Name")
                                .HasColumnType("longtext");

                            b1.Property<string>("Url")
                                .HasColumnType("longtext");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("longtext");

                            b1.HasKey("EventId");

                            b1.ToTable("Events");

                            b1.WithOwner()
                                .HasForeignKey("EventId");
                        });

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("Applander.Domain.Entities.EventInvitation", b =>
                {
                    b.HasOne("Applander.Domain.Entities.ApplendarUser", "ApplendarUser")
                        .WithMany("EventInvitations")
                        .HasForeignKey("ApplendarUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Applander.Domain.Entities.Event", "Event")
                        .WithMany("Invitations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplendarUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Applander.Domain.Entities.ApplendarUser", b =>
                {
                    b.Navigation("EventInvitations");

                    b.Navigation("OrganizedEvents");
                });

            modelBuilder.Entity("Applander.Domain.Entities.Event", b =>
                {
                    b.Navigation("Invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
