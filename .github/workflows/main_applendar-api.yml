# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - applendar-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set environment and environment-prefixed secrets
        run: |
            if ("${{ github.ref }}" -eq "refs/heads/main") {
              echo "ASPNETCORE_ENVIRONMENT=Development" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "ENV_FILE=appsettings.Development.json" >> $env:GITHUB_ENV
              echo "SQL_CONNECTION_STRING=${{ secrets.DEV_SQL_CONNECTION_STRING }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_DOMAIN=${{ secrets.DEV_AUTH0_DOMAIN }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_CLIENT_ID=${{ secrets.DEV_AUTH0_CLIENT_ID }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_CLIENT_SECRET=${{ secrets.DEV_AUTH0_CLIENT_SECRET }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_AUDIENCE=${{ secrets.DEV_AUTH0_AUDIENCE }}" | Out-File -FilePath $env:GITHUB_ENV -Append
            } elseif ("${{ github.ref }}" -eq "refs/heads/production") {
              echo "ASPNETCORE_ENVIRONMENT=Production" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "ENV_FILE=appsettings.Production.json" >> $env:GITHUB_ENV
              echo "SQL_CONNECTION_STRING=${{ secrets.PROD_SQL_CONNECTION_STRING }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_DOMAIN=${{ secrets.PROD_AUTH0_DOMAIN }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_CLIENT_ID=${{ secrets.PROD_AUTH0_CLIENT_ID }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_CLIENT_SECRET=${{ secrets.PROD_AUTH0_CLIENT_SECRET }}" | Out-File -FilePath $env:GITHUB_ENV -Append
              echo "AUTH0_AUDIENCE=${{ secrets.PROD_AUTH0_AUDIENCE }}" | Out-File -FilePath $env:GITHUB_ENV -Append
            }
        shell: pwsh

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true
      
      # Inject secrets into the appropriate appsettings file
      - name: Inject secrets into appsettings file
        run: |
          cd ${{ github.workspace }}/Applendar.API
          $filePath = "${{ env.ENV_FILE }}"
          (Get-Content $filePath -Raw | ConvertFrom-Json) | 
          ForEach-Object {
            $_.ConnectionStrings.SQL_CONNECTION_STRING = "${{ env.SQL_CONNECTION_STRING }}"
            $_.Authentication.Auth0.Domain = "${{ env.AUTH0_DOMAIN }}"
            $_.Authentication.Auth0.ClientId = "${{ env.AUTH0_CLIENT_ID }}"
            $_.Authentication.Auth0.ClientSecret = "${{ env.AUTH0_CLIENT_SECRET }}"
            $_.Authentication.Auth0.Audience = "${{ env.AUTH0_AUDIENCE }}"
            $_
          } | ConvertTo-Json -Depth 32 | Set-Content $filePath
        shell: pwsh
        
      - name: Build with dotnet
        run: dotnet build --configuration Debug

      - name: dotnet publish
        run: dotnet publish -c Debug -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'applendar-api'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_3E224FCE676A4122BF68066447B7F756 }}
          package: .